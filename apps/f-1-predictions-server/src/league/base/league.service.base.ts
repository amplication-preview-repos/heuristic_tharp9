/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, League as PrismaLeague } from "@prisma/client";

export class LeagueServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LeagueCountArgs, "select">): Promise<number> {
    return this.prisma.league.count(args);
  }

  async leagues(args: Prisma.LeagueFindManyArgs): Promise<PrismaLeague[]> {
    return this.prisma.league.findMany(args);
  }
  async league(
    args: Prisma.LeagueFindUniqueArgs
  ): Promise<PrismaLeague | null> {
    return this.prisma.league.findUnique(args);
  }
  async createLeague(args: Prisma.LeagueCreateArgs): Promise<PrismaLeague> {
    return this.prisma.league.create(args);
  }
  async updateLeague(args: Prisma.LeagueUpdateArgs): Promise<PrismaLeague> {
    return this.prisma.league.update(args);
  }
  async deleteLeague(args: Prisma.LeagueDeleteArgs): Promise<PrismaLeague> {
    return this.prisma.league.delete(args);
  }
}
